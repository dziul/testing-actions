name: "Semantic Versioning"
description: "Release tag and badge versioning"
# https://actions-cool.github.io/github-action-branding/
branding:
  icon: 'tag'
  color: 'purple'
  
inputs:
  config-file-path:
    description: "Configuration file from semantic-release"
    required: false
    type: string
    default: ''
  dry_run:
    description: "Dry run"
    required: false
    type: boolean
    default: false
    
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
    
    - uses: actions/setup-node@v3
      with:
        node-version: 16
         
    - name: Checking exists configuration file
      shell: bash
      run: |
        CONFIG_FILENAME=".releaserc"
        PLUGIN_TO_NEXT_RELEASE="[\"@semantic-release/exec\",{\"successCmd\": \"echo \\"::set-output name=version::\${nextRelease.version}\\" && echo \\"::set-output name=channel::\${nextRelease.channel}\\"\"}]"
        if [ -f "${{ inputs.config-file-path }}" ]; then
          CONFIG_FILENAME="${{ inputs.config-file-path }}"
        else
          CONFIG_DEFAULT='{"branches":["main","master"],"plugins":["@semantic-release/commit-analyzer","@semantic-release/release-notes-generator"]}'
          echo $CONFIG_DEFAULT | jq > $CONFIG_FILENAME
        fi
        cat $CONFIG_FILENAME
        jq --arg value $PLUGIN_TO_NEXT_RELEASE  '.plugins|= . + [$value]' $CONFIG_FILENAME  > $CONFIG_FILENAME
        cat $CONFIG_FILENAME
        NPX_PACKAGES=$( jq '.plugins|map(if type=="array" then .[0] else . end) | unique | reduce .[] as $item (""; . + " -p " + $item)' $CONFIG_FILENAME)
        echo $NPX_PACKAGES


