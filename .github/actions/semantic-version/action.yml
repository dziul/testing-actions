name: "Semantic Versioning"
description: "Release tag and badge versioning"
# https://actions-cool.github.io/github-action-branding/
branding:
  icon: 'tag'
  color: 'purple'
  
inputs:
  config-file-path:
    description: "Configuration file from semantic-release"
    required: false
    type: string
    default: ''
  dry_run:
    description: "Dry run"
    required: false
    type: boolean
    default: false
    
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 16
    - name: Setup envs
      shell: bash
      run: | 
         CONFIG_FILENAME=".releaserc"
         CONFIG_DEFAULT='{"branches":["main","master"],"plugins":["@semantic-release/commit-analyzer","@semantic-release/release-notes-generator"]}'
         PLUGIN_TO_NEXT_RELEASE='["@semantic-release/exec",{"successCmd": " echo \"::set-output name=version::${nextRelease.version}\" && echo \"::set-output name=channel::${nextRelease.channel}\" "}]'
         ####
         echo ${{ env.TEST }}
         echo "CONFIG_FILENAME=\"$CONFIG_FILENAME\"" >> $GITHUB_ENV
         echo "CONFIG_DEFAULT=\"$CONFIG_DEFAULT\"" >> $GITHUB_ENV
         echo "PLUGIN_TO_NEXT_RELEASE=\"$PLUGIN_TO_NEXT_RELEASE\"" >> $GITHUB_ENV
         
    - name: Checking exists configuration file
      shell: bash
      run: |
        if [ -f "${{ inputs.config-file-path }}" ]; then
          echo "CONFIG_FILENAME=${{ inputs.config-file-path }}" >> $GITHUB_ENV
        else
          echo "${{env.CONFIG_DEFAULT}}" | jq -r ${{env.CONFIG_FILENAME}}
        fi
        echo "env-----${{ env.CONFIG_FILENAME }} ${{ env.CONFIG_DEFAULT }}"
    - name: Setup to versioning
      shell: bash
      run: |
        jq --arg value ${{env.CONFIG_DEFAULT}}  '.plugins|= . + $value'   ${{env.CONFIG_FILENAME}}
        cat ${{env.CONFIG_FILENAME}}
        ls -a
        NPX_PACKAGES=$( jq '.plugins|map(if type=="array" then .[0] else . end) | unique | reduce .[] as $item (""; . + " -p " + $item)' $CONFIG_FILENAME)
        echo $NPX_PACKAGES
