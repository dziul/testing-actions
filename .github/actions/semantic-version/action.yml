name: "Semantic Versioning"
description: "Release tag and badge versioning"
# https://actions-cool.github.io/github-action-branding/
branding:
  icon: 'tag'
  color: 'purple'
  
inputs:
  config-file-path:
    description: "Configuration file from semantic-release"
    required: false
    type: string
    default: ''
  dry_run:
    description: "Dry run"
    required: false
    type: boolean
    default: false
    
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
    
    - uses: actions/setup-node@v3
      with:
        node-version: 16
         
    - name: Checking exists configuration file
      shell: bash
      run: |
        CONFIG_FILENAME=.releaserc
        if [ -f "" ]; then
          CONFIG_FILENAME=""
        else
          CONFIG_DEFAULT='{"branches":["main","master"],"plugins":["@semantic-release/commit-analyzer","@semantic-release/release-notes-generator"]}'
          echo $CONFIG_DEFAULT | jq > $CONFIG_FILENAME
        fi
        NPX_PACKAGES=$(cat $CONFIG_FILENAME | jq '.plugins|map(if type=="array" then .[0] else . end) | unique | reduce .[] as $item ("-p semantic-release -p @semantic-release/exec"; . + " -p " + $item)')
        cat $CONFIG_FILENAME | jq -r '.plugins|= .+ [["@semantic-release/exec",{"verifyConditionsCmd": "rm -f .releaserc","successCmd": "echo \"::set-output name=tag::${nextRelease.version}\"","verifyReleaseCmd": "echo \"--version ${nextRelease.version}\""}]]' > $CONFIG_FILENAME
        eval echo npx -y "$NPX_PACKAGES" semantic-release -e $CONFIG_FILENAME
        npx -y -p semantic-release -p @semantic-release/exec -p @semantic-release/commit-analyzer -p @semantic-release/release-notes-generator semantic-release -e .releaserc
