name: "Semantic Versioning"
description: "Release tag and badge versioning"
inputs:
  config-file-path:
    description: "Configuration file from semantic-release"
    required: false
    type: string
    default: ''
  dry_run:
    description: "Dry run"
    required: false
    type: boolean
    default: false
    
# https://actions-cool.github.io/github-action-branding/
branding:
  icon: 'tag'
  color: 'purple'


env:
  CONFIG_FILENAME: ".releaserc"
  CONFIG_DEFAULT: '{"branches":["main","master"],"plugins":["@semantic-release/commit-analyzer","@semantic-release/release-notes-generator"]}'
  PLUGIN_TO_NEXT_RELEASE: '["@semantic-release/exec",{"successCmd": " echo \"::set-output name=version::${nextRelease.version}\" && echo \"::set-output name=channel::${nextRelease.channel}\" "}]'


defaults:
  run:
    shell: bash
    
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 16
    - name: Checking exists configuration file
      run: |
        if [ -f "${{ inputs.config-file-path }}" ]; then
          echo "CONFIG_FILENAME=${{ inputs.config-file-path }}" >> $GITHUB_ENV
        else
          echo $CONFIG_DEFAULT | jq -r $CONFIG_FILENAME
          cat $CONFIG_FILENAME
        fi
    - name: Setup to versioning
      run: |
        jq --arg value $CONFIG_DEFAULT  '.plugins|= . + $value'   $CONFIG_FILENAME
        cat $CONFIG_FILENAME
        NPX_PACKAGES=$( jq '.plugins|map(if type=="array" then .[0] else . end) | unique | reduce .[] as $item (""; . + " -p " + $item)' $CONFIG_FILENAME)
        echo $NPX_PACKAGES
